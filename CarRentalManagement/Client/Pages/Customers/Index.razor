@page "/customers/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Customer</h3>
<br />
<a href="/customers/create" class="btn btn-secondary">
    <span class="oi oi-plus"></span>
    Add Account Details
</a>
<br />
<br />

@if (Customers == null)
{
    <div class="alert alert-info"> Loading Customers...</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Name</th>
                <th>Driving License</th>
                <th>Card Number</th>
                <th>CVV</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in Customers)
            {
                <tr>
                    <td>@customer.Name</td>
                    <td>@customer.DrivingLicense</td>
                    <td>@customer.CardNumber</td>
                    <td>@customer.CVV</td>
                    <td>@customer.EmailAddress</td>
                    <td>
                        <a href="/customer/view/@customer.ID" class="btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="customers/edit/@customer.ID" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(()=>Delete(customer.ID))">
                            <span class="oi oi-delete"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Customer>? Customers;
    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

    async Task Delete(int customerID)
    {
        if (Customers != null)
        {
            var customer = Customers.First(q => q.ID == customerID);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {customer.Name}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.CustomersEndpoint}/{customerID}");
                await OnInitializedAsync();
            }
        }
    }
}
