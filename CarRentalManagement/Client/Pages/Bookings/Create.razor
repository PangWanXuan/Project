@page "/bookings/create"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3>Create New Booking</h3>
<hr />
<br />

<EditForm Model="@booking" OnValidSubmit="CreateBooking">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Vehicle :</label>
        <div>
            <InputSelect @bind-Value="booking.VehicleId" class="form-control">
                <option value="">-- Select Vehicle --</option>
                @if (Vehicles != null)
                {
                    foreach (var vehicle in Vehicles)
                    {
                        <option value="@vehicle.ID">@vehicle.LicensePlateNumber</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => booking.VehicleId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Name On Card :</label>
        <div>
            <InputSelect @bind-Value="booking.CustomerId" class="form-control">
                <option value="">-- Select Customer --</option>
                @if (Customers != null)
                {
                    foreach (var customer in Customers)
                    {
                        <option value="@customer.ID">@customer.Name</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(() => booking.CustomerId)" />
        </div>
    </div>

    <div class="form-group">
        <label>Date Of Rental :</label>
        <div>
            <InputDate @bind-Value="booking.DateOut" class="form-control" />
            <ValidationMessage For="@(() => booking.DateOut)" />
        </div>
    </div>
    <div class="form-group">
        <label>Date Of Return:</label>
        <div>
            <InputDate @bind-Value="booking.DateIn" class="form-control" />
            <ValidationMessage For="@(() => booking.DateIn)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Booking
    </button>

    <!-- New "Back" button -->
    <button class="btn btn-secondary mt-3" @onclick="GoBack">
        <span class="oi oi-arrow-left"></span>
        Back to Bookings
    </button>
</EditForm>

@code {
    Booking booking = new Booking();
    private IList<Vehicle>? Vehicles;
    private IList<Customer>? Customers;

    protected async override Task OnInitializedAsync()
    {
        Vehicles = await _client.GetFromJsonAsync<List<Vehicle>>($"{Endpoints.VehiclesEndpoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

    private async Task CreateBooking()
    {
        await _client.PostAsJsonAsync(Endpoints.BookingsEndpoint, booking);
        _navManager.NavigateTo("/bookings/");
    }

    private void GoBack()
    {
        _navManager.NavigateTo("/bookings/");
    }
}
